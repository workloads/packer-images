---

- name: Provision Packer Image for Target `{{ packer_builder_type }}`
  hosts: default
  become: true
  vars:
    ansible_required_version: 2.15.1

  # path is relative from `main.yml`
  # see https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html#understanding-variable-precedence
  vars_files:
    - "{{ ConfigFile }}"

  pre_tasks:
    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/fail_module.html
    - name: Verify Ansible Version meets requirements
      ansible.builtin.fail:
        msg: Need v{{ ansible_required_version }}, got v{{ ansible_version.full }}
      when: ansible_version.full < ansible_required_version

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
    - name: Set Ansible Architecture short-hand
      ansible.builtin.set_fact:
        normalized_arch: "{{ 'amd64' if (ansible_architecture == 'x86_64') else 'arm64' if (ansible_architecture == 'aarch64') else ansible_architecture }}"

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
    - name: Print `ansible_env`
      ansible.builtin.debug:
        var: ansible_env
      when:
        - enable_debug_statements is defined
        - enable_debug_statements

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
    - name: Print `ansible_facts`
      ansible.builtin.debug:
        var: ansible_facts
      when:
        - enable_debug_statements is defined
        - enable_debug_statements
        - enable_facts_statement

  roles:
    - role: gantsign.golang
      vars:
        golang_version: "{{ developer.go.version }}"
        golang_install_dir: "{{ developer.go.install_dir_prefix }}/{{ developer.go.version }}"
      when:
        - developer_mode is true

    - role: ansible-lockdown.ubuntu22_cis
      when:
        - ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'jammy' and enable_cis_hardening is true

  tasks:
    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
    - name: Manage OS Operations
      ansible.builtin.include_tasks:
        file: os.yml
      when:
        - os is defined and os.enabled

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
    - name: Manage Tooling Tasks
      ansible.builtin.include_tasks:
        file: tools.yml
      when:
        - tools is defined

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
    - name: Manage User Tasks
      ansible.builtin.include_tasks:
        file: users.yml
      when:
        - users is defined

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
    - name: Manage Developer Mode Tasks
      ansible.builtin.include_tasks:
        file: developer.yml
      when:
        - developer_mode is true

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
    - name: Manage Cleanup Tasks
      ansible.builtin.include_tasks:
        file: post_cleanup.yml
      when:
        - post_cleanup is defined and post_cleanup.enabled
