---

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
- name: "({{ repo_name | upper }}) Debug"
  ansible.builtin.debug:
    msg: "included tools_repositories.yml"
  when:
    - enable_debug_statements is defined
    - enable_debug_statements

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_module.html
- name: "({{ repo_name | upper }}) Remove (possibly-outdated) non-Repository Packages"
  ansible.builtin.package:
    name: "{{ repo_config.packages.to_remove }}"
    state: absent
  when:
    - ansible_os_family == "Amazon"
      or ansible_os_family == "Debian"
      or ansible_os_family == "RedHat"

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
- name: "({{ repo_name | upper }}) Create Directory to write Keyring Files to"
  ansible.builtin.file:
    path: "{{ repo_keyring_directory }}"
    state: directory
    mode: "0644"
  when:
    # create directory only if on Ubuntu < 22.xx
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version < "22"

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
- name: "({{ repo_name | upper }}) Add APT Key from URL"
  ansible.builtin.get_url:
    dest: "{{ repo_keyring_directory }}/{{ repo_gpg_file }}"
    mode: "0644"
    url: "{{ repo_config.key }}"
  when:
    - ansible_distribution == "Ubuntu"
    - repo_config is defined
    - repo_config.key is defined
    - repo_keyring_directory and repo_gpg_file is defined

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
- name: "({{ repo_name | upper }}) set Ansible Facts for Debian-specific OS"
  ansible.builtin.set_fact:
    arch: "arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
    signed_by: "signed-by={{ repo_keyring_directory }}/{{ repo_gpg_file }}"

    # TODO: make this less 'smart" and find a better place to define the target string
    target: "{{ repo_config.url }} {{ 'deb' if repo_name == 'osquery' else ansible_distribution_release }} {{ repo_config.component }}"
    cacheable: false
  when:
    - ansible_os_family == "Debian"

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html
- name: "({{ repo_name | upper }}) Configure APT Repository"
  ansible.builtin.apt_repository:
    filename: "{{ repo_name }}"
    repo: "deb [{{ arch }} {{ signed_by }}] {{ target }}"
    update_cache: true
    state: present
  when:
    - ansible_os_family == "Debian"

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html
- name: "({{ repo_name | upper }}) Install Repository-provided Packages"
  ansible.builtin.apt:
    install_recommends: true
    name: "{{ installable.name }}={{ installable.version | default('*') }}"
    state: present
    update_cache: true
  with_items: "{{ repo_config.packages.to_install }}"
  loop_control:
    loop_var: installable
  when:
    - ansible_os_family == "Debian"
